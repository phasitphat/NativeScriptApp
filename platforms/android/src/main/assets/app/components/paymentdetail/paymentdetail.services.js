"use strict";
var core_1 = require("@angular/core");
var core_2 = require("@angular/core");
var http_1 = require("@angular/http");
var serverurl_1 = require("./../serverurl"); // get server test
var LocalStorage = require("nativescript-localstorage");
require("rxjs/add/operator/map");
require("rxjs/add/operator/do");
var MyHttpGetService = (function () {
    // private serverUrl = 'http://192.168.42.100:8000/myapp/orders/';
    // public localorderid: number;
    function MyHttpGetService(http, server) {
        this.http = http;
        this.server = server;
    }
    return MyHttpGetService;
}());
MyHttpGetService = __decorate([
    core_1.Component({
        providers: [serverurl_1.ServerComponent]
    }),
    core_2.Injectable(),
    __metadata("design:paramtypes", [http_1.Http, serverurl_1.ServerComponent])
], MyHttpGetService);
exports.MyHttpGetService = MyHttpGetService;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGF5bWVudGRldGFpbC5zZXJ2aWNlcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbInBheW1lbnRkZXRhaWwuc2VydmljZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLHNDQUFrRDtBQUNsRCxzQ0FBMkM7QUFDM0Msc0NBQXdEO0FBR3hELDRDQUFpRCxDQUFDLGtCQUFrQjtBQUVwRSxJQUFJLFlBQVksR0FBRyxPQUFPLENBQUUsMkJBQTJCLENBQUUsQ0FBQztBQUUxRCxpQ0FBK0I7QUFDL0IsZ0NBQThCO0FBUzlCLElBQWEsZ0JBQWdCO0lBQ3pCLGtFQUFrRTtJQUNsRSwrQkFBK0I7SUFHL0IsMEJBQW9CLElBQVUsRUFBVSxNQUF1QjtRQUEzQyxTQUFJLEdBQUosSUFBSSxDQUFNO1FBQVUsV0FBTSxHQUFOLE1BQU0sQ0FBaUI7SUFBSSxDQUFDO0lBcUJ4RSx1QkFBQztBQUFELENBQUMsQUExQkQsSUEwQkM7QUExQlksZ0JBQWdCO0lBUDVCLGdCQUFTLENBQUM7UUFFUCxTQUFTLEVBQUUsQ0FBQywyQkFBZSxDQUFDO0tBRS9CLENBQUM7SUFFRCxpQkFBVSxFQUFFO3FDQU1pQixXQUFJLEVBQWtCLDJCQUFlO0dBTHRELGdCQUFnQixDQTBCNUI7QUExQlksNENBQWdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xyXG5pbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcclxuaW1wb3J0IHsgSHR0cCwgSGVhZGVycywgUmVzcG9uc2UgfSBmcm9tIFwiQGFuZ3VsYXIvaHR0cFwiO1xyXG5pbXBvcnQgeyBPYnNlcnZhYmxlIGFzIFJ4T2JzZXJ2YWJsZSB9IGZyb20gXCJyeGpzL1J4XCI7XHJcblxyXG5pbXBvcnQgeyBTZXJ2ZXJDb21wb25lbnQgfSBmcm9tIFwiLi8uLi9zZXJ2ZXJ1cmxcIjsgLy8gZ2V0IHNlcnZlciB0ZXN0XHJcblxyXG5sZXQgTG9jYWxTdG9yYWdlID0gcmVxdWlyZSggXCJuYXRpdmVzY3JpcHQtbG9jYWxzdG9yYWdlXCIgKTtcclxuXHJcbmltcG9ydCBcInJ4anMvYWRkL29wZXJhdG9yL21hcFwiO1xyXG5pbXBvcnQgXCJyeGpzL2FkZC9vcGVyYXRvci9kb1wiO1xyXG5cclxuQENvbXBvbmVudCh7XHJcblxyXG4gICAgcHJvdmlkZXJzOiBbU2VydmVyQ29tcG9uZW50XVxyXG5cclxufSlcclxuXHJcbkBJbmplY3RhYmxlKClcclxuZXhwb3J0IGNsYXNzIE15SHR0cEdldFNlcnZpY2Uge1xyXG4gICAgLy8gcHJpdmF0ZSBzZXJ2ZXJVcmwgPSAnaHR0cDovLzE5Mi4xNjguNDIuMTAwOjgwMDAvbXlhcHAvb3JkZXJzLyc7XHJcbiAgICAvLyBwdWJsaWMgbG9jYWxvcmRlcmlkOiBudW1iZXI7XHJcbiAgICBcclxuXHJcbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIGh0dHA6IEh0dHAsIHByaXZhdGUgc2VydmVyOiBTZXJ2ZXJDb21wb25lbnQpIHsgfVxyXG5cclxuICAgIC8vIGdldERhdGEoKSB7XHJcbiAgICAvLyAgICAgbGV0IGhlYWRlcnMgPSB0aGlzLmNyZWF0ZVJlcXVlc3RIZWFkZXIoKTtcclxuXHJcbiAgICAvLyAgICAgdGhpcy5sb2NhbG9yZGVyaWQgPSBMb2NhbFN0b3JhZ2UuZ2V0SXRlbShcIm9yZGVyX2lkXCIpO1xyXG4gICAgLy8gICAgIGNvbnNvbGUubG9nKFwiT3JkZXIgaWQgaW4gUGF5bWVudERldGFpbCA6IFwiICsgdGhpcy5sb2NhbG9yZGVyaWQpXHJcbiAgICAgICAgXHJcbiAgICAvLyAgICAgcmV0dXJuIHRoaXMuaHR0cC5nZXQodGhpcy5zZXJ2ZXJVcmwrdGhpcy5sb2NhbG9yZGVyaWQrXCIvXCIsIHsgaGVhZGVyczogaGVhZGVycyB9KVxyXG4gICAgLy8gICAgICAgICAubWFwKHJlcyA9PiByZXMuanNvbigpKTtcclxuICAgIC8vIH1cclxuXHJcblxyXG4gICAgLy8gcHJpdmF0ZSBjcmVhdGVSZXF1ZXN0SGVhZGVyKCkge1xyXG4gICAgLy8gICAgIGxldCBoZWFkZXJzID0gbmV3IEhlYWRlcnMoKTtcclxuICAgIC8vICAgICAvLyBzZXQgaGVhZGVycyBoZXJlIGUuZy5cclxuICAgIC8vICAgICAvLyBoZWFkZXJzLmFwcGVuZChcIkF1dGhLZXlcIiwgXCJteS1rZXlcIik7XHJcbiAgICAvLyAgICAgLy8gaGVhZGVycy5hcHBlbmQoXCJBdXRoVG9rZW5cIiwgXCJteS10b2tlblwiKTtcclxuICAgIC8vICAgICBoZWFkZXJzLmFwcGVuZChcIkNvbnRlbnQtVHlwZVwiLCBcImFwcGxpY2F0aW9uL2pzb25cIik7XHJcbiAgICAvLyAgICAgcmV0dXJuIGhlYWRlcnM7XHJcbiAgICAvLyB9XHJcbn1cclxuIl19