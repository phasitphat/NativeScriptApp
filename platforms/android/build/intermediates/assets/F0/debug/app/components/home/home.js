"use strict";
var core_1 = require("@angular/core");
var router_1 = require("@angular/router");
var home_services_1 = require("./home.services");
var serverurl_1 = require("./../serverurl"); // get server test
// import * as observable from 'data/observable';
// import * as pages from 'ui/page';
// import {HelloWorldModel} from './main-view-model';
var LocalStorage = require("nativescript-localstorage");
var HomeComponent = (function () {
    function HomeComponent(router, myService, server) {
        this.router = router;
        this.myService = myService;
        this.server = server;
        this.new_product_id = [];
        this.new_product_name = [];
        this.new_product_price = [];
        this.new_product_image = [];
        this.random_product_id = [];
        this.random_product_image = [];
        this.i = 0;
        this.count = 0;
        this.myItems = [];
        this.localid = LocalStorage.getItem("customer_id");
    }
    HomeComponent.prototype.ngOnInit = function () {
        this.extractDataRandom();
        this.extractDataOrder();
        this.extractDataNew();
    };
    HomeComponent.prototype.extractDataRandom = function () {
        var _this = this;
        console.log("getDataRandom");
        this.myService.getDataRandom()
            .subscribe(function (result) { return _this.onGetDataSuccessRandom(result); }, function (error) { return _this.onGetDataError(error); });
    };
    HomeComponent.prototype.extractDataOrder = function () {
        var _this = this;
        console.log("getDataOrder");
        this.myService.getDataOrder()
            .subscribe(function (result) { return _this.onGetDataSuccessOrder(result); }, function (error) { return _this.onGetDataError(error); });
    };
    HomeComponent.prototype.extractDataNew = function () {
        var _this = this;
        console.log("getDataNew");
        this.myService.getDataNew()
            .subscribe(function (result) { return _this.onGetDataSuccess_new(result); }, function (error) { return _this.onGetDataError(error); });
    };
    HomeComponent.prototype.extractDataSearch = function () {
        var _this = this;
        console.log("getDataSearch");
        this.myService.getDataRandom()
            .subscribe(function (result) { return _this.onGetDataSuccessSearch(result); }, function (error) { return _this.onGetDataError(error); });
    };
    HomeComponent.prototype.onGetDataSuccessRandom = function (res) {
        console.log("Push Items for Search");
        console.log("onGetDataSuccess_Random");
        this.ran1 = Math.floor(Math.random() * res.length) + 1;
        this.ran2 = Math.floor(Math.random() * res.length) + 1;
        this.ran3 = Math.floor(Math.random() * res.length) + 1;
        this.ran4 = Math.floor(Math.random() * res.length) + 1;
        this.ran5 = Math.floor(Math.random() * res.length) + 1;
        this.ran6 = Math.floor(Math.random() * res.length) + 1;
        this.ran7 = Math.floor(Math.random() * res.length) + 1;
        this.ran8 = Math.floor(Math.random() * res.length) + 1;
        this.ran9 = Math.floor(Math.random() * res.length) + 1;
        this.ran10 = Math.floor(Math.random() * res.length) + 1;
        for (var _i = 0, res_1 = res; _i < res_1.length; _i++) {
            var product = res_1[_i];
            if (this.myItems.length != res.length) {
                this.myItems.push(product.product_name.toLowerCase());
            }
            if (product.id == this.ran1) {
                this.random_product_id[0] = product.id;
                this.random_product_image[0] = product.product_image;
            }
            if (product.id == this.ran2) {
                this.random_product_id[1] = product.id;
                this.random_product_image[1] = product.product_image;
            }
            if (product.id == this.ran3) {
                this.random_product_id[2] = product.id;
                this.random_product_image[2] = product.product_image;
            }
            if (product.id == this.ran4) {
                this.random_product_id[3] = product.id;
                this.random_product_image[3] = product.product_image;
            }
            if (product.id == this.ran5) {
                this.random_product_id[4] = product.id;
                this.random_product_image[4] = product.product_image;
            }
            if (product.id == this.ran6) {
                this.random_product_id[5] = product.id;
                this.random_product_image[5] = product.product_image;
            }
            if (product.id == this.ran7) {
                this.random_product_id[6] = product.id;
                this.random_product_image[6] = product.product_image;
            }
            if (product.id == this.ran8) {
                this.random_product_id[7] = product.id;
                this.random_product_image[7] = product.product_image;
            }
            if (product.id == this.ran9) {
                this.random_product_id[8] = product.id;
                this.random_product_image[8] = product.product_image;
            }
            if (product.id == this.ran10) {
                this.random_product_id[9] = product.id;
                this.random_product_image[9] = product.product_image;
            }
        }
    };
    HomeComponent.prototype.onGetDataSuccessOrder = function (res) {
        console.log("onGetDataSuccess_Order");
        for (var _i = 0, res_2 = res; _i < res_2.length; _i++) {
            var order = res_2[_i];
            console.log("Order In Home : " + order.customer);
            if (order.customer == this.localid) {
                console.log("Order at home : " + order.customer);
                console.log("Order id : " + order.id);
                LocalStorage.setItem("order_id", order.id);
            }
        }
    };
    HomeComponent.prototype.onGetDataSuccess_new = function (res) {
        console.log("onGetDataSuccess_new_release");
        for (var _i = 0, res_3 = res; _i < res_3.length; _i++) {
            var product = res_3[_i];
            if (this.i < 10) {
                this.new_product_id[this.i] = product.id;
                this.new_product_name[this.i] = product.product_name;
                this.new_product_price[this.i] = product.product_price;
                this.new_product_image[this.i] = product.product_image;
                // console.log("New Product id : "+ product.id)
                // console.log("New Product image : "+product.product_image)
                this.i += 1;
            }
        }
    };
    HomeComponent.prototype.onGetDataSuccessSearch = function (res) {
        this.localsearch = LocalStorage.getItem("localsearch");
        for (var _i = 0, res_4 = res; _i < res_4.length; _i++) {
            var product = res_4[_i];
            if (product.product_name.toLowerCase() == this.localsearch) {
                this.router.navigate(["product/", product.id]);
            }
        }
    };
    HomeComponent.prototype.onGetDataError = function (error) {
        var body = error.json() || "";
        var err = body.error || JSON.stringify(body);
        console.log("onGetDataError: " + err);
    };
    HomeComponent.prototype.cart = function () {
        this.router.navigate(["cart"]); // come from path in routing ts
    };
    HomeComponent.prototype.menu = function () {
        this.router.navigate(["menu"]); // come from path in routing ts
    };
    HomeComponent.prototype.product = function (product_id) {
        if (product_id === void 0) { product_id = 0; }
        // let navigationExtras: NavigationExtras = {
        //     queryParams: {
        //         "id": product_id
        //     }
        // };
        // console.log(JSON.stringify(navigationExtras));
        // this.router.navigate(["product/"], navigationExtras);
        this.router.navigate(["product/", product_id]);
        // this.router.navigateByUrl('product/' + product_id);       
    };
    HomeComponent.prototype.onSubmit = function (value) {
        // alert("You are searching for " + value);
        // for(var _i = 0; _i < this.myItems.length; _i++){
        var x = 0;
        var out = 0;
        console.log("Search : " + value);
        console.log("this.myItems.length : " + this.myItems.length);
        for (this.count = 0; this.count < this.myItems.length; this.count++) {
            // console.log("count : "+this.count)
            x += 1;
            if (this.myItems[this.count].toLowerCase() == value.toLowerCase()) {
                console.log("Search : " + value);
                LocalStorage.setItem("localsearch", value.toLowerCase());
                this.extractDataSearch();
                out = 1;
            }
            if (out == 0 && x + 1 > this.myItems.length) {
                console.log("x : " + x);
                console.log("this.myItems.length : " + this.myItems.length);
                alert("No Product Name : " + value);
            }
        }
    };
    HomeComponent.prototype.onSearchLayoutLoaded = function (event) {
        event.object.android.setFocusableInTouchMode(true);
    };
    HomeComponent.prototype.onSearchBarLoaded = function (event) {
        event.object.android.clearFocus();
    };
    HomeComponent.prototype.clearTextfieldFocus = function (event) {
        event.layout.android.dismissSoftInput();
    };
    return HomeComponent;
}());
HomeComponent = __decorate([
    core_1.Component({
        selector: "home",
        templateUrl: "./components/home/home.html",
        providers: [home_services_1.MyHttpGetService, serverurl_1.ServerComponent]
    }),
    __metadata("design:paramtypes", [router_1.Router, home_services_1.MyHttpGetService, serverurl_1.ServerComponent])
], HomeComponent);
exports.HomeComponent = HomeComponent;
//# sourceMappingURL=data:application/json;base64,